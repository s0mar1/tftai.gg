name: E2E Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand(\"ping\").ok' --quiet"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and pnpm
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          run_install: false

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install

      - name: Build packages in parallel
        run: |
          # shared Ìå®ÌÇ§ÏßÄÎ•º Î®ºÏ†Ä ÎπåÎìú ÌõÑ ÎÇòÎ®∏ÏßÄ ÎèôÏãú Ïã§Ìñâ
          pnpm build:shared
          pnpm build:backend &
          pnpm build:frontend &
          wait

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps

      - name: Start backend server
        run: |
          cd backend
          pnpm start &
          sleep 10
        env:
          NODE_ENV: test
          PORT: 4002
          MONGODB_URI: mongodb://localhost:27017/tft-meta-test
          RIOT_API_KEY: ${{ secrets.RIOT_API_KEY }}
          GOOGLE_AI_MAIN_API_KEY: ${{ secrets.GOOGLE_AI_MAIN_API_KEY }}

      - name: Start frontend server
        run: |
          cd frontend
          pnpm build
          pnpm preview &
          sleep 10
        env:
          VITE_API_URL: http://localhost:4002

      - name: Run E2E tests
        run: pnpm test:e2e
        env:
          FRONTEND_URL: http://localhost:3000

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Upload test videos
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-videos
          path: test-results/
          retention-days: 30

  notification:
    needs: e2e-tests
    runs-on: ubuntu-latest
    if: failure()
    
    steps:
      - name: Notify on failure
        run: |
          echo "E2E tests failed! üö®"
          echo "Check the test results and videos in the artifacts."
          echo "This indicates that core user flows may be broken."